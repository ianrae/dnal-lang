classTemplate(pkg, className, baseClassName, shapeType, dvmethod) ::= <<
// *** Generated by dnalc ***

package <pkg>;

//***imports***

public class <className>Data implements <className> {
	private DValue dvalue;
	
	public <className>(DValue dval) {
		this.dvalue = dval;
	}
	
	@Override
	public <shapeType> value() {
		return value.<dvmethod>();
	}

>>


structTemplate(pkg, className, baseClassName) ::= <<
// *** Generated by dnalc ***

package <pkg>;

//***imports***

public class <className>Data implements <className> {
	private DValue dvalue;
	private DStructHelper helper;
	
	public <className>(DValue dval) {
		this.dvalue = dval;
		this.helper = new DStructHelper(dval);
	}
	
>>

memberTemplate(ufieldName, fieldName, shapeType, dvalFn) ::= <<

 @Override
 <shapeType> get<ufieldName>() {
      return helper.getField("<fieldName>").<dvalFn>();
 }
>>

